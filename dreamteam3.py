##################### ---- ФУНКЦИИ ---- ##############################

# Задание 1:
# Спросите у пользователя строку НА Английском или целое предложение и
# удалите все глассные буквы там.
# То что осталось от строки выведите на экран.
# Строка не должна быть короче 10 символов.

wow():
    a = input('Enter sentence in English: ')
    vowels = ['a', 'o', 'e', 'u', 'i']
    c = list(a)
    for i in c:
        if i in vowels:
            c.remove(i)
    print(c)
wow()
################################################################################


# Задание 2:
# Вам дан набор данных accounts.
# Функция должна проходить по каждому листу состоящему из 3-х символов и
# найти ту
# где их сумма больше всего.

# accounts = [
#     [[1,5,5],[7,4,5],[1,3,5],[2,1,5],[7,3,9],[8,3,5],[1,5,0],[7,3,2],[9,3,5]],
#     [[1,5,3],[2,7,3],[6,3,5],[1,5,9],[7,3,3],[3,5,4],[1,5,6],[7,3,6],[3,5,8]],
#     [[1,5,3],[7,3,0],[3,5,4],[1,5,6],[7,3,2],[3,5,4],[1,5,9],[7,3,2],[3,5,0]],
#     [[1,5,1],[7,3,2],[3,5,3],[1,5,4],[7,3,5],[3,5,6],[1,5,7],[7,3,8],[3,5,9]],
# ]

 accounts = [
     [[1,5,5],[7,4,5],[1,3,5],[2,1,5],[7,3,9],[8,3,5],[1,5,0],[7,3,2],[9,3,5]],
     [[1,5,3],[2,7,3],[6,3,5],[1,5,9],[7,3,3],[3,5,4],[1,5,6],[7,3,6],[3,5,8]],
     [[1,5,3],[7,3,0],[3,5,4],[1,5,6],[7,3,2],[3,5,4],[1,5,9],[7,3,2],[3,5,0]],
     [[1,5,1],[7,3,2],[3,5,3],[1,5,4],[7,3,5],[3,5,6],[1,5,7],[7,3,8],[3,5,9]],
 ]

 x = 0
 y = None

 for i in accounts:
     for a in i:
         b = sum(a)
         if b > x:
             x = b
             y = a
 print("Лист где сумма больше всего: ", y)

################################################################################


# Задание 3:
# Вам даны 2 листа:

# list_1 = ['a', 'bc', 'de']
# list_2 = ['ab', 'c', 'de']

# Напишите функцию которая их принимает и сравнивает на равность.
# Пример где листы равны:

    # a + bc + de = abcde
    # ab + c + de = abcde

    # list_1 = ['123', 'abc', 'de']
    # list_2 = ['1', '23', 'abcde']

# Пример где листы НЕ равны:

    # a + cb + de = acbde
    # ab + c + de = abcde

    # list_1 = ['123', 'abc', 'de']
    # list_2 = ['123', 'de', 'abc']

list_1 = ['a', 'bc', 'de']
list_2 = ['ab', 'c', 'de']
def compare():
    a = list_1[0] + list_1[1] + list_1[2]
    b = list_2[0] + list_2[1] + list_2[2]
    if a == b:
        print('Равны')
    else:
        print('Не равны')

compare()
################################################################################


# Задание 4:
# Известно что функция print() выводит на экран текст который Вы в ней указали.
# Известно что есть ещё один способ вывести на экран любой текст sys.stdout.write(), но его использовать нельзя.
# Так случилось что функция print поменяла своё имя и стала называться display.
# Выведите с помощью новой функции display() на экран следующий текст: "Теперь я тут PRINT()"
# Общее количество строк для решения этой задачи не может быть больше 2-х строк, иначе задание не принимается.

#Cогласовано с администрацией)
 def display():
     print("Теперь я тут PRINT()")
 display()

################################################################################


# Задание 5:
# Вам дан SET значений:

# uniques = {3,13,15,27,1,4,8,23,19,12,9,2,17}

# Создайте функцию которая:
# Удалите все чётные значения внутри SET, а оставшиеся отсортирует по убыванию.
# В результате, ваша функция должна вернуть отсортированный SET и неважно, каким будет SET растопленным или замороженным.

def remover():
    uniques = {3, 13, 15, 27, 1, 4, 8, 23, 19, 12, 9, 2, 17}
    list_ = list(uniques)
    for i in list_:
        if i % 2 == 0:
            list_.remove(i)
    b = sorted(list_)
    uniques = set(b)
    print(uniques)

remover()
################################################################################


# Задание 6:
# В Python есть такой тип Данных как Boolean...
# Создайте TUPLE который ТЕХНИЧЕСКИ состоит из 4 Булевых ЗНАЧЕНИЙ.

a = (True, False, True, False)
print(a)
################################################################################


# Задание 7:
# Вам дан TUPLE и пустая Dictionary:

# pairs = {}

# В Tuple перечислены элементы, где идёт строгая очерёдность STRING и INTEGER.
# То есть если перед вами элемент типа данных STRING то следующий точно INTEGER и наоборот.
# keys_values = ('one', 1, 2, 'two', 3, 'three', 'four', 4, 'five', 5, 6 'six', 7, 'seven', 'eight', 8, 'nine',9, 10, 'ten', 11, '11', 12 ,'13')
# Проходя по TUPLE необходимо брать элементы по парно, один элемент может относиться только и только к одной паре.
# Ваша задача выявить если элемент является типом данных string() то записывать его как ключ в Dictionary -> pairs.

# Пример:
# pairs ={'one': 1, 'two': 2, 'three': 3, ...}

keys_values = ('one', 1, 2, 'two', 3, 'three', 'four', 4, 'five', 5, 6, 'six', 7, 'seven', 'eight', 8, 'nine',9, 10, 'ten', 11, '11', 12 ,'13')
pairs = {}
def order():
    keys = []
    values = []
    for i in keys_values:
        if type(i) == str:
            keys.append(i)
        elif type(i) == int:
            values.append(i)
    b = zip(keys, values)
    c = dict(b)
    pairs.update(c)


order()
################################################################################


# Задание 8:
# Создайте 2 функции input которые спрашивают пользовтеля:
# 1. Какой длины должно быть число.
# 2. Из каких цифр только должно состоять число.
# Если пользователь попросит сгенерировать число длиною меньше 7 символов, скажите что это слишком короткое число.
# Спросите число снова и снова и снова пока он не введёт допустимое число.
# Если пользователь попросит сгенерировать число длиною больше 30 символов, скажите что это слишком длинное число.
# Спросите число снова и снова и снова пока он не введёт допустимое число.
# Если пользователь введёт меньше чем 3 числа во втором input, скажите что он ввёл слишком мало значений и спросите снова.
# Во втором input числа будут вводиться строго либо через запятую либо через пробел.
# Если пользователь использовал и пробелы и запятые во втором input, скажите что он ввёл неправильные значения и спросите числа снова.
# После того как пользователь введёт вам оба верных значения:
# сгенерируйте ему число длиною как он попросил и состоящее только из тех чисел которые он указал.

# Пример:
# Какой длины должно быть число: 7
# Какие цифры только должны присутствовать: 2,3,5,0,1

# Результат:
# 2201550

# Какой длины должно быть число: 9
# Какие цифры только должны присутствовать: 2 7 5

# Результат:
# 275727572

################################################################################


# Задание 9:
# Попросить пользователя ввести текст.В результате
# вывести процент букв в верхнем регистре(заглавные)
# и в нижнем регистре(прописные)

def percent():
    a = str(input())
    b = []
    for i in a:
        if i.isupper():
            b.append(i)
    c = len(b) / len(a) * 100
    d = 100 - c
    print(c, '% заглавных, ', d, '% прописных' )

percent()def
################################################################################


# Задание 10:
# Если вы были на Луне сейчас, ваш вес будет 16,5% от вашего веса земли.
# Для его расчета необходимо умножить на 0,165.
# Если в ближайшие 15 лет ваш вес будет увеличиваться на 1 кг каждый год.
# Какой будет ваш вес каждый год на Луне в следующем 15 лет?

a = float(input('Введите ваш вес в кг: '))
luna = a * 0.165

print("Ваш вес на луне равно ", luna, " кг")
for i in range(15):
   a += 1
   luna = a * 0.165
   print(i + 1, " год - Вес в КГ на луне = ", luna)
################################################################################


# Задание 11:
# Попросить пользователя ввести слова через пробел.
# Отсортировать слова по количеству символов и вывести на экран результат.

# Пример input: сон машина стол книга девочка
# Результат: сон стол книга машина девочка

def sort():
    a = input('Введите слова через пробел: ')
    a = a.split()
    a.sort(key=len)
    a = ' '.join(a)
    print(a)
sort()
################################################################################



# Задание 12:
# Напишите функцию который будет конвертировать Фаренгейт в Цельсии и
# наоборот.

def temp_counter(a, b):
     if b == 1:
         c = (a - 32) / 1.8
         print("Цельсий: ", c)
     elif b == 2:
         c = a * 1.8 + 32
         print("Фаренгейт: ", c)
     else:
         print("Some Error")

 x = int(input("Нажмите 1 для конвертации Фаренгейт в Цельсий, Нажмите 2 для конвертации Цельсий в Фаренгейт: "))
 y = int(input("Введите значение: "))

 if x == 1 or x == 2:
     temp_counter(y, x)
 else:
     print("Некорректное значение!")

